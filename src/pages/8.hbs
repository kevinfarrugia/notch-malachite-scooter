<div>
  <p>
    This demo serves the same images as in the previous example, but instead of
    defining the different file formats in the HTML, it serves the correct file
    format based on the
    <code>Accept</code>
    request header. The Accept header is checked on the server which rewrites
    the URL to include the correct file extension and then forwards the response
    as part of the original request.
  </p>
  <p>
    This makes it seamless to the user, while the HTML markup is much smaller and easier to write.
  </p>
  <p>
    <i>If you observe the image request in your browser's DevTools, you may notice
    that the file type is AVIF, WebP or JPEG even if the file URL always ends in <code>.jpg</code>.</i>
  </p>
  <div class="gallery">
    <div class="large">
      <picture>
        <source
          media="(min-width: 560px) and (-webkit-min-device-pixel-ratio: 1.5)"
          srcset="/images-accept/image-1280-lossy.jpg 1280w, /images-accept/image-1920-lossy.jpg 1920w"
          sizes="(min-width: 540px) 640px, calc(100vw - 2rem)"
        />
        <source
          media="(max-width: 560px) and (-webkit-min-device-pixel-ratio: 1.5)"
          srcset="/images-accept/image-1280-lossy-sm.jpg 1280w, /images-accept/image-1920-lossy-sm.jpg 1920w"
          sizes="(min-width: 540px) 640px, calc(100vw - 2rem)"
        />
        <img
          alt="Photograph of a group of pedestrians crossing the street."
          width="640"
          height="426"
          src="/images-accept/image-640-lossy.jpg"
        />
      </picture>
    </div>
  </div>
  <div>
    <p>
      <strong>Image details:</strong>
    </p>
    <table>
      <tbody>
        <tr>
          <td>
            File
          </td>
          <td id="currentSrc">
          </td>
        </tr>
        <tr>
          <td>
            Intrinsic Width
          </td>
          <td id="naturalWidth">
          </td>
        </tr>
        <tr>
          <td>
            Intrinsic Height
          </td>
          <td id="naturalHeight">
          </td>
        </tr>
        <tr>
          <td>
            Display Width
          </td>
          <td id="clientWidth">
          </td>
        </tr>
        <tr>
          <td>
            Display Height
          </td>
          <td id="clientHeight">
          </td>
        </tr>
        <tr>
          <td>
            DPR
          </td>
          <td id="dpr">
          </td>
        </tr>
        <tr>
          <td>
            Percentage Used
          </td>
          <td id="usedPercentage">
          </td>
        </tr>
      </tbody>
    </table>
  </div>
  {{! prettier-ignore }}
  <p>
    <details>
      <summary>View Source Code</summary>      
      <pre><code>// index.html
&lt;picture&gt;
  &lt;source
    media=&quot;(min-width: 560px) and (-webkit-min-device-pixel-ratio: 1.5)&quot;
    srcset=&quot;/images-accept/image-1280-lossy.jpg 1280w, /images-accept/image-1920-lossy.jpg 1920w&quot;
    sizes=&quot;(min-width: 540px) 640px, calc(100vw - 2rem)&quot;
  /&gt;
  &lt;source
    media=&quot;(max-width: 560px) and (-webkit-min-device-pixel-ratio: 1.5)&quot;
    srcset=&quot;/images-accept/image-1280-lossy-sm.jpg 1280w, /images-accept/image-1920-lossy-sm.jpg 1920w&quot;
    sizes=&quot;(min-width: 540px) 640px, calc(100vw - 2rem)&quot;
  /&gt;
  &lt;img
    alt=&quot;Photograph of a group of pedestrians crossing the street.&quot;
    width=&quot;640&quot;
    height=&quot;426&quot;
    src=&quot;/images-accept/image-640-lossy.jpg&quot;
  /&gt;
&lt;/picture&gt;

// server.js
fastify.get(&quot;/images-accept/*&quot;, function (request, reply) {
  const { url } = request;
  const filename = path.parse(url).name;

  if (request.headers.accept) {
    if (request.headers.accept.includes(&quot;image/avif&quot;)) {
      return reply.from(
        `https://cdn.glitch.global/5c7a461a-f9fa-4174-b79d-36b794063351/${filename}.avif`
      );
    } else if (request.headers.accept.includes(&quot;image/webp&quot;)) {
      return reply.from(
        `https://cdn.glitch.global/5c7a461a-f9fa-4174-b79d-36b794063351/${filename}.webp`
      );
    }
  }

  return reply.from(
    `https://cdn.glitch.global/5c7a461a-f9fa-4174-b79d-36b794063351/${filename}.jpg`
  );
});</code></pre>
    </details>
  </p>
</div>